{"version":3,"sources":["services/index.js","context.js","components/NavBar.js","services/map.js","pages/home/Home.js","components/404/NotFound.js","components/Footer.js","components/Form.js","pages/login/Login.js","pages/signup/Signup.js","pages/profile/Profile.js","components/ContactCard.js","pages/contacts/Contacts.js","pages/contact/Contact.js","pages/safePlace/safePlace.js","services/mapc5.js","pages/C5/c5.js","components/PlaceCard.js","pages/safePlaces/safePlaces.js","Router.js","theme.js","serviceWorker.js","index.js"],"names":["baseURL","SERVICE","axios","create","withCredentials","MY_SERVICE","test","a","get","signup","user","post","login","logOut","createContact","contact","deleteContact","id","delete","getContacts","data","createPlace","place","deletePlace","getPlaces","getAllPlaces","sendSMS","MyContext","createContext","MyProvider","state","viewport","width","height","latitude","longitude","zoom","formSignup","name","email","password","genre","age","formLogin","formContact","phone","formSafePlace","geometry","properties","description","loggedUser","isLogged","contacts","places","handleHelpRequest","AUTH_SERVICE","handleDeletePlace","e","handleUpdatePlaces","setState","updateViewPort","newViewPort","handleSafePlaceSubmit","preventDefault","form","handleSafePlaceInput","target","value","handleOnSelectMap","item","handleLogOut","props","history","push","handleDeleteContact","handleContactInput","handleContactSubmit","handleLoginInput","handleUpdateContacts","handleLoginSubmit","then","msg","catch","err","finally","handleSignupInput","handleInputNumber","handleSignupSubmit","this","Provider","children","Component","withRouter","NavBar","context","useContext","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","logout","Consumer","Flex","w","h","px","bg","alignItems","justify","exact","to","flexDirection","justifyContent","Image","size","objectFit","src","alt","Heading","color","as","Box","Button","ref","variantColor","onClick","icon","faBars","Drawer","placement","finalFocusRef","Stack","isInline","Avatar","image","Text","fontSize","faGithub","variant","mr","service","MAP_SERVICE","heatmap","style","position","Home","useState","map","setMap","mapContainer","useEffect","mapboxgl","accessToken","process","navigator","geolocation","getCurrentPosition","pos","center","coords","Marker","setLngLat","addTo","Map","container","current","PLACE_SERVICE","res","forEach","marker","el","document","createElement","className","coordinates","setPopup","Popup","offset","setHTML","on","addSource","type","addLayer","source","maxzoom","paint","stops","default","resize","initializeMap","NotFound","Footer","toast","useToast","sendHelpRequest","title","status","bottom","faSignInAlt","Form","submit","bgColor","backgroundColor","onSubmit","boxShadow","spacing","p","textAlign","Login","show","setShow","handleClick","align","FormControl","isRequired","InputGroup","faEnvelope","Input","onChange","placeholder","faKey","Signup","duration","isClosable","console","log","faUser","Select","FormLabel","htmlFor","Slider","Profile","ContactCard","mb","borderRadius","_id","faMinus","ml","Contacts","overflow","i","key","faPlus","Contact","faPhone","mapAccess","mapboxApiAccessToken","mapStyle","queryParams","country","SafePlace","addPlace","onSelect","changeViewPort","onSelected","hideOnSelect","limit","initialInputValue","onViewportChange","faMapMarked","Textarea","MAP_CCINCO","Ccinco","features","estatus_conectividad","PlaceCard","address","SafePlaces","Router","path","component","customIcons","d","viewBox","customTheme","theme","icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","WhitTheme","ThemeProvider","CSSReset","require","ReactDOM","render","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de6b65e4.chunk.js","sourcesContent":["import axios from \"axios\";\nlet baseURL;\n\nprocess.env.NODE_ENV === \"production\"\n  ? (baseURL = \"https://bsafebackend.herokuapp.com\")\n  : (baseURL = \"http://localhost:3000\");\n\nconst SERVICE = axios.create({ withCredentials: true, baseURL });\n\nconst MY_SERVICE = {\n  test: async () => {\n    return await SERVICE.get(\"/\");\n  },\n  signup: async user => {\n    return await SERVICE.post(\"/auth/signup\", user);\n  },\n  login: async user => {\n    return await SERVICE.post(\"/auth/login\", user);\n  },\n  logOut: async () => {\n    return await SERVICE.get(\"/auth/logout\");\n  },\n  createContact: async contact => {\n    return await SERVICE.post(\"/contacts/create\", contact);\n  },\n  deleteContact: async id => {\n    return await SERVICE.delete(`/contacts/delete/${id}`);\n  },\n  getContacts: async () => {\n    const { data } = await SERVICE.get(\"/contacts/getContacts\");\n    return data;\n  },\n  createPlace: async place => {\n    return await SERVICE.post(\"/safePlace/create\", place);\n  },\n  deletePlace: async id => {\n    return await SERVICE.delete(`/safePlace/delete/${id}`)\n  },\n  getPlaces: async () => {\n    const { data } = await SERVICE.get(\"/safePlace/getPlaces\");\n    return data\n  },\n  getAllPlaces: async () => {\n    const {data} = await SERVICE.get('/safePlace/getAllPlaces')\n    return data\n  },\n  sendSMS: async () => {\n    return await SERVICE.get('/sms/send-text')\n  }\n};\n\nexport default MY_SERVICE;\n","import React, { Component, createContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport AUTH_SERVICE from \"./services/index\";\n\nexport const MyContext = createContext();\n\nclass MyProvider extends Component {\n  state = {\n    viewport: {\n      width: 400,\n      height: 400,\n      latitude: 19.4326018,\n      longitude: -99.1353989,\n      zoom: 11\n    },\n    formSignup: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      genre: \"\",\n      age: 18\n    },\n    formLogin: {\n      email: \"\",\n      password: \"\"\n    },\n    formContact: {\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    formSafePlace: {\n      geometry: null,\n      properties: null,\n      name: \"\",\n      description: \"\"\n    },\n    loggedUser: null,\n    isLogged: false,\n    contacts: null,\n    places: null\n  };\n\n  handleHelpRequest = async () => {\n    return await AUTH_SERVICE.sendSMS();\n  };\n\n  handleDeletePlace = async e => {\n    return await AUTH_SERVICE.deletePlace(e);\n  };\n\n  handleUpdatePlaces = async () => {\n    const { places } = await AUTH_SERVICE.getPlaces();\n    this.setState({ places });\n  };\n\n  updateViewPort = newViewPort => {\n    this.setState({ viewport: newViewPort });\n  };\n\n  handleSafePlaceSubmit = async e => {\n    e.preventDefault();\n    const form = this.state.formSafePlace;\n    this.setState({\n      formSafePlace: {\n        name: \"\",\n        description: \"\",\n        geometry: null,\n        properties: null\n      }\n    });\n    return await AUTH_SERVICE.createPlace(form);\n  };\n\n  handleSafePlaceInput = e => {\n    const { formSafePlace } = this.state;\n    const { name, value } = e.target;\n    formSafePlace[name] = value;\n    this.setState({ formSafePlace });\n  };\n\n  handleOnSelectMap = (viewport, item) => {\n    this.setState({ viewport });\n    const { properties, geometry } = item;\n    this.setState({ formSafePlace: { properties, geometry } });\n  };\n\n  handleLogOut = async () => {\n    await AUTH_SERVICE.logOut();\n    this.props.history.push(\"/\");\n    this.setState({ loggedUser: null, isLogged: false });\n  };\n\n  handleDeleteContact = async e => {\n    return await AUTH_SERVICE.deleteContact(e);\n  };\n\n  handleContactInput = e => {\n    const { formContact } = this.state;\n    const { name, value } = e.target;\n    formContact[name] = value;\n    this.setState({ formContact });\n  };\n\n  handleContactSubmit = async e => {\n    e.preventDefault();\n    const form = this.state.formContact;\n    this.setState({ formContact: { name: \"\", email: \"\", phone: \"\" } });\n    return await AUTH_SERVICE.createContact(form);\n  };\n\n  handleLoginInput = e => {\n    const { formLogin } = this.state;\n    const { name, value } = e.target;\n    formLogin[name] = value;\n    this.setState({ formLogin });\n  };\n\n  handleUpdateContacts = async () => {\n    const { contacts } = await AUTH_SERVICE.getContacts();\n    this.setState({ contacts });\n  };\n\n  handleLoginSubmit = e => {\n    e.preventDefault();\n    const form = this.state.formLogin;\n    return AUTH_SERVICE.login(form)\n      .then(async ({ data: { user } }) => {\n        const { contacts } = await AUTH_SERVICE.getContacts();\n        this.setState({ contacts });\n        const { places } = await AUTH_SERVICE.getPlaces();\n        this.setState({ places });\n        this.setState({\n          loggedUser: user,\n          isLogged: true\n        });\n        return { user, msg: \"logged\" };\n      })\n      .catch(err => {\n        this.setState({\n          loggedUser: null,\n          isLogged: false,\n          formLogin: { email: \"\", password: \"\" }\n        });\n        return { user: null, msg: \"Invalid username/password.\" };\n      })\n      .finally(() => this.setState({ formLogin: { email: \"\", password: \"\" } }));\n  };\n\n  handleSignupInput = e => {\n    const { formSignup } = this.state;\n    const { name, value } = e.target;\n    formSignup[name] = value;\n    this.setState({ formSignup });\n  };\n\n  handleInputNumber = value => {\n    const { formSignup } = this.state;\n    formSignup[\"age\"] = value;\n    this.setState({ formSignup });\n  };\n  handleSignupSubmit = async e => {\n    e.preventDefault();\n    const form = this.state.formSignup;\n    this.setState({\n      formSignup: { name: \"\", email: \"\", password: \"\", genre: \"\", age: 0 }\n    });\n    return await AUTH_SERVICE.signup(form);\n  };\n\n  render() {\n    const {\n      state,\n      handleHelpRequest,\n      handleDeletePlace,\n      handleUpdatePlaces,\n      handleSafePlaceSubmit,\n      handleSafePlaceInput,\n      updateViewPort,\n      handleOnSelectMap,\n      handleLogOut,\n      handleDeleteContact,\n      handleUpdateContacts,\n      handleContactSubmit,\n      handleContactInput,\n      handleSignupInput,\n      handleSignupSubmit,\n      handleInputNumber,\n      handleLoginInput,\n      handleLoginSubmit\n    } = this;\n    return (\n      <MyContext.Provider\n        value={{\n          state,\n          handleHelpRequest,\n          handleDeletePlace,\n          handleUpdatePlaces,\n          handleSafePlaceSubmit,\n          handleSafePlaceInput,\n          updateViewPort,\n          handleLogOut,\n          handleOnSelectMap,\n          handleDeleteContact,\n          handleUpdateContacts,\n          handleContactSubmit,\n          handleContactInput,\n          handleSignupInput,\n          handleSignupSubmit,\n          handleInputNumber,\n          handleLoginInput,\n          handleLoginSubmit\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(MyProvider);\n","import React, { useContext } from \"react\";\nimport {\n  Flex,\n  Heading,\n  Button,\n  Box,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  useDisclosure,\n  Text,\n  Stack,\n  Avatar,\n  Image\n} from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/fontawesome-free-brands\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { MyContext } from \"../context\";\n\nfunction NavBar() {\n  const context = useContext(MyContext);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const logout = () => {\n    context\n      .handleLogOut()\n      .then()\n      .catch();\n  };\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const { isLogged, loggedUser } = context.state;\n        if (isLogged)\n          return (\n            <Flex\n              w=\"100\"\n              h=\"10vh\"\n              px={5}\n              bg=\"#313131\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n            >\n              <NavLink exact to=\"/\">\n                <Flex\n                  flexDirection=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Image\n                    size=\"50px\"\n                    objectFit=\"cover\"\n                    src=\"/images/protection.png\"\n                    alt=\"Segun Adebayo\"\n                  />\n                  <Heading px={3} color=\"white\" as=\"h2\" size=\"xl\">\n                    BSafe\n                  </Heading>\n                </Flex>\n              </NavLink>\n              <Box>\n                <Button\n                  ref={btnRef}\n                  variantColor=\"transparent\"\n                  onClick={onOpen}\n                >\n                  <FontAwesomeIcon icon={faBars} size=\"2x\" color=\"#CA3E47\" />\n                </Button>\n                <Drawer\n                  isOpen={isOpen}\n                  placement=\"right\"\n                  onClose={onClose}\n                  finalFocusRef={btnRef}\n                >\n                  <DrawerOverlay />\n                  <DrawerContent>\n                    <DrawerCloseButton />\n                    <DrawerHeader>\n                      <Stack isInline>\n                        <Avatar name={loggedUser.name} src={loggedUser.image} />\n                      </Stack>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                      <Link to=\"/\">Home</Link>\n                      <br />\n                      <br />\n                      <Link to=\"/profile\">Profile</Link>\n                      <br />\n                      <br />\n                      <Link to=\"/profile/contacts\">My Safe Contacts</Link>\n                      <br />\n                      <br />\n                      <Link to=\"/profile/places\">My Safe Places</Link>\n                    </DrawerBody>\n\n                    <DrawerFooter>\n                      <Text fontSize=\"md\">\n                        Ironhack WDFT 2020 - oljudi\n                        <FontAwesomeIcon icon={faGithub} />\n                      </Text>\n                      <Button\n                        variant=\"outline\"\n                        variantColor=\"red\"\n                        mr={3}\n                        onClick={logout}\n                      >\n                        LogOut\n                      </Button>\n                    </DrawerFooter>\n                  </DrawerContent>\n                </Drawer>\n              </Box>\n            </Flex>\n          );\n        else {\n          return (\n            <NavLink exact to=\"/\">\n              <Flex\n                w=\"100\"\n                h=\"10vh\"\n                px={5}\n                bg=\"#313131\"\n                alignItems=\"center\"\n                justify=\"space-between\"\n              >\n                <Flex\n                  flexDirection=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Image\n                    size=\"50px\"\n                    objectFit=\"cover\"\n                    src=\"/images/protection.png\"\n                    alt=\"Segun Adebayo\"\n                  />\n                  <Heading px={3} color=\"white\" as=\"h2\" size=\"xl\">\n                    BSafe\n                  </Heading>\n                </Flex>\n              </Flex>\n            </NavLink>\n          );\n        }\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default NavBar;\n","import axios from \"axios\";\nconst baseURL =\n  \"https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=carpetas-de-investigacion-pgj-de-la-ciudad-de-mexico&rows=200&facet=ao_hechos&facet=mes_hechos&facet=delito&facet=categoria_delito&facet=fiscalia&facet=alcaldia_hechos&facet=colonia_hechos&facet=ao_inicio&facet=mes_inicio&format=geojson\";\n\nconst service = axios.create({ baseURL });\n\n\nconst MAP_SERVICE = {\n  heatmap: async () => {\n    return await service.get();\n  }\n};\n\nexport default MAP_SERVICE;","import React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MAP_SERVICE from \"../../services/map\";\nimport PLACE_SERVICE from \"../../services/index\";\nimport \"./Home.css\";\n\nconst style = {\n  width: \"100vw\",\n  height: \"80vh\",\n  position: \"absolute\"\n};\n\nconst Home = () => {\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n    const initializeMap = ({ setMap, mapContainer }) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const center = [pos.coords.longitude, pos.coords.latitude];\n          new mapboxgl.Marker().setLngLat(center).addTo(map);\n        });\n        const map = new mapboxgl.Map({\n          container: mapContainer.current,\n          style: \"mapbox://styles/mapbox/dark-v10\",\n          center: [-99.1353989, 19.4326018],\n          zoom: 10\n        });\n        PLACE_SERVICE.getAllPlaces().then(res => {\n          res.places.forEach(function(marker) {\n            const el = document.createElement(\"div\");\n            el.className = \"markerSafe\";\n            new mapboxgl.Marker(el)\n              .setLngLat(marker.geometry.coordinates)\n              .setPopup(\n                new mapboxgl.Popup({ offset: 25 }).setHTML(\n                  \"<h3>\" +\n                    marker.name +\n                    \"</h3><p>\" +\n                    marker.description +\n                    \"</p>\"\n                )\n              )\n              .addTo(map);\n          });\n        });\n        MAP_SERVICE.heatmap().then(res => {\n          map.on(\"load\", () => {\n            map.addSource(\"data\", {\n              type: \"geojson\",\n              data: res.data\n            });\n            map.addLayer({\n              id: \"danger\",\n              type: \"heatmap\",\n              source: \"data\",\n              maxzoom: 24,\n              paint: {\n                \"heatmap-intensity\": {\n                  stops: [\n                    [15, 1],\n                    [15, 3]\n                  ]\n                },\n                \"heatmap-opacity\": {\n                  default: 1,\n                  stops: [\n                    [14, 1],\n                    [15, 0]\n                  ]\n                }\n              }\n            });\n            setMap(map);\n            map.resize();\n          });\n        });\n      }\n    };\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [map]);\n\n  return <div ref={el => (mapContainer.current = el)} style={style} />;\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useContext } from \"react\";\nimport { Flex, Button, useToast, Text, Image } from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { MyContext } from \"../context\";\n\nfunction Footer() {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const sendHelpRequest = () => {\n    context\n      .handleHelpRequest()\n      .then(res => {\n        toast({\n          title: \"SMS Send\",\n          description:\n            \"Help Request sended to your safe contacts, please contact 911 for help\",\n          status: \"success\"\n        });\n      })\n      .catch(err => {\n        toast({\n          title: \"Error\",\n          description: \"Can't send the sms, please contact 911 for help\",\n          status: \"error\"\n        });\n      });\n  };\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const { isLogged } = context.state;\n        if (isLogged)\n          return (\n            <Flex\n              w=\"100vw\"\n              h=\"10vh\"\n              px={5}\n              bg=\"#313131\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n              bottom=\"0\"\n              position=\"fixed\"\n            >\n              <Link to=\"/c5view\">\n                <Image\n                  size=\"50px\"\n                  objectFit=\"cover\"\n                  src=\"/images/cctv.png\"\n                  alt=\"Camera\"\n                />\n                <Text fontSize=\"md\" color=\"white\">\n                  C5 Cameras\n                </Text>\n              </Link>\n              <Button\n                variantColor=\"transparent\"\n                onClick={() => sendHelpRequest()}\n              >\n                <Image\n                  size=\"50px\"\n                  objectFit=\"cover\"\n                  src=\"https://image.flaticon.com/icons/svg/595/595031.svg\"\n                  alt=\"Camera\"\n                />\n              </Button>\n            </Flex>\n          );\n        else {\n          return (\n            <Flex\n              w=\"100vw\"\n              h=\"10vh\"\n              px={5}\n              bg=\"#313131\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n              bottom=\"0\"\n              position=\"fixed\"\n            >\n              <Link to=\"/c5view\">\n                <Image\n                  size=\"50px\"\n                  objectFit=\"cover\"\n                  src=\"/images/cctv.png\"\n                  alt=\"Camera\"\n                />\n                <Text fontSize=\"md\" color=\"white\">\n                  C5 Cameras\n                </Text>\n              </Link>\n              <Link to=\"/login\">\n                <FontAwesomeIcon icon={faSignInAlt} size=\"2x\" color=\"white\" />\n                <Text fontSize=\"md\" color=\"white\">\n                  Login\n                </Text>\n              </Link>\n            </Flex>\n          );\n        }\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Box, Stack, Heading, Button} from \"@chakra-ui/core\";\n\nfunction Form({ width, children, title, submit, bgColor }) {\n\n\n  return (\n    <Box\n      backgroundColor={bgColor}\n      onSubmit={submit}\n      as=\"form\"\n      w={width || \"350px\"}\n      boxShadow=\"x1\"\n    >\n      <Stack spacing={8} p={8}>\n        <Heading textAlign=\"center\" as=\"h1\" color=\"white\">\n          {title}\n        </Heading>\n        {children}\n        <Button backgroundColor=\"#CA3E47\" type=\"submit\" color=\"white\">\n          {title}\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React, { useContext } from \"react\";\nimport {\n  Flex,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  InputRightElement,\n  Button,\n  useToast,\n  FormControl,\n  Text,\n  Stack\n} from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport { MyContext } from \"../../context\";\nimport Form from \"../../components/Form\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login({history}) {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  const login = e => {\n    context\n      .handleLoginSubmit(e)\n      .then(res => {\n        history.push(\"/\");\n      })\n      .catch(err => {\n        toast({\n          title: \"Please, try again!\",\n          description:'Username or password Incorrect!!',\n          status: \"error\"\n        });\n      });\n  };\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <Flex\n            backgroundColor=\"#110D40\"\n            w=\"100vw\"\n            h=\"90vh\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <Stack>\n              <Form submit={login} bgColor=\"transparent\" title=\"Login\">\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon\n                          icon={faEnvelope}\n                          size=\"1x\"\n                          color=\"gray\"\n                        />\n                      }\n                    />\n                    <Input\n                      name=\"email\"\n                      value={context.state.formLogin.email}\n                      onChange={context.handleLoginInput}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                    />\n                  </InputGroup>\n                </FormControl>\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon icon={faKey} size=\"1x\" color=\"gray\" />\n                      }\n                    />\n                    <Input\n                      type={show ? \"text\" : \"password\"}\n                      name=\"password\"\n                      value={context.state.formLogin.password}\n                      onChange={context.handleLoginInput}\n                      placeholder=\"Password\"\n                    />\n                    <InputRightElement width=\"4.5rem\">\n                      <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                        {show ? \"Hide\" : \"Show\"}\n                      </Button>\n                    </InputRightElement>\n                  </InputGroup>\n                </FormControl>\n              </Form>\n              <Text fontSize=\"sm\" color=\"white\">\n                Don't have an account? - <Link to=\"/signup\">Signup</Link>\n              </Text>\n            </Stack>\n          </Flex>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport {\n  Flex,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  InputRightElement,\n  Button,\n  Select,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  FormControl,\n  useToast,\n  FormLabel,\n  Stack,\n  Text\n} from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faKey, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { MyContext } from \"../../context\";\nimport Form from \"../../components/Form\";\nimport { Link } from \"react-router-dom\";\n\nfunction Signup({history}) {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  const submit = e => {\n    context\n      .handleSignupSubmit(e)\n      .then(res => {\n        toast({\n          title: \"Congrats!!\",\n          description: \"Your Account have been created sucessfully!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true\n        });\n        // console.log(state)\n        history.push('/login')\n      })\n      .catch(err => {\n        console.log(err);\n        toast({\n          title: \"ERROR\",\n          description: `We cannot create your account ${err}`\n        });\n      });\n  };\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <Flex\n            backgroundColor=\"#110D40\"\n            w=\"100vw\"\n            h=\"90vh\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <Stack>\n              <Form submit={submit} bgColor=\"transparent\" title=\"SignUp\">\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon icon={faUser} size=\"1x\" color=\"gray\" />\n                      }\n                    />\n                    <Input\n                      name=\"name\"\n                      value={context.state.formSignup.name}\n                      onChange={context.handleSignupInput}\n                      type=\"text\"\n                      placeholder=\"Name\"\n                    />\n                  </InputGroup>\n                </FormControl>\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon\n                          icon={faEnvelope}\n                          size=\"1x\"\n                          color=\"gray\"\n                        />\n                      }\n                    />\n                    <Input\n                      name=\"email\"\n                      value={context.state.formSignup.email}\n                      onChange={context.handleSignupInput}\n                      type=\"email\"\n                      placeholder=\"Email\"\n                    />\n                  </InputGroup>\n                </FormControl>\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon icon={faKey} size=\"1x\" color=\"gray\" />\n                      }\n                    />\n                    <Input\n                      type={show ? \"text\" : \"password\"}\n                      name=\"password\"\n                      value={context.state.formSignup.password}\n                      onChange={context.handleSignupInput}\n                      placeholder=\"Password\"\n                    />\n                    <InputRightElement width=\"4.5rem\">\n                      <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                        {show ? \"Hide\" : \"Show\"}\n                      </Button>\n                    </InputRightElement>\n                  </InputGroup>\n                </FormControl>\n                <FormControl isRequired>\n                  <Select\n                    placeholder=\"Genre\"\n                    name=\"genre\"\n                    value={context.state.formSignup.genre}\n                    onChange={context.handleSignupInput}\n                  >\n                    <option value=\"M\">M</option>\n                    <option value=\"F\">F</option>\n                  </Select>\n                </FormControl>\n                <FormControl isRequired>\n                  <FormLabel color=\"white\" htmlFor=\"age\">\n                    {\" \"}\n                    Age{\" \"}\n                  </FormLabel>\n                  <Flex>\n                    <Slider\n                      id=\"age\"\n                      name=\"age\"\n                      value={context.state.formSignup.age}\n                      onChange={context.handleInputNumber}\n                    >\n                      <SliderTrack />\n                      <SliderFilledTrack />\n                      <SliderThumb\n                        fontSize=\"sm\"\n                        width=\"32px\"\n                        height=\"20px\"\n                        children={context.state.formSignup.age}\n                      />\n                    </Slider>\n                  </Flex>\n                </FormControl>\n              </Form>\n              <Text fontSize=\"sm\" color=\"white\">\n                Already have an Account? - <Link to=\"/login\">Login</Link>\n              </Text>\n            </Stack>\n          </Flex>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Signup;\n\n","import React from \"react\";\nimport { Flex, Stack, Avatar, Heading, Button } from \"@chakra-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { MyContext } from \"../../context\";\n\nfunction Profile({ history }) {\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const { isLogged, loggedUser } = context.state;\n        if (isLogged)\n          return (\n            <Flex\n              backgroundColor=\"#110D40\"\n              w=\"100vw\"\n              h=\"90vh\"\n              align=\"center\"\n              justify=\"center\"\n              color=\"white\"\n            >\n              <Stack align=\"center\" justify=\"center\">\n                <Avatar\n                  size=\"2xl\"\n                  name={loggedUser.name}\n                  src={loggedUser.image}\n                />\n                <p>Name</p>\n                <Heading as=\"h6\">{loggedUser.name}</Heading>\n                <p>Email</p>\n                <Heading as=\"h6\">{loggedUser.email}</Heading>\n                <br />\n                <Flex>\n                  <Stack p={4}>\n                    <p>Genre</p>\n                    <Heading as=\"h6\">{loggedUser.genre}</Heading>\n                  </Stack>\n                  <Stack p={4}>\n                    <p>Age</p>\n                    <Heading as=\"h6\">{loggedUser.age}</Heading>\n                  </Stack>\n                </Flex>\n                <br />\n                <br />\n                <Flex justify=\"space-evenly\">\n                  <Stack p={4}>\n                    <Link to=\"/profile/places\">\n                      <Button variantColor=\"red\">Places</Button>\n                    </Link>\n                  </Stack>\n                  <Stack p={4}>\n                    <Link to=\"/profile/contacts\">\n                      <Button variantColor=\"red\">Contacts</Button>\n                    </Link>\n                  </Stack>\n                </Flex>\n              </Stack>\n            </Flex>\n          );\n        else {\n          history.push(\"/login\");\n        }\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Profile;\n","import React, { useContext } from \"react\";\nimport { Button, Flex, Text, Stack, useToast } from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport { MyContext } from \"../context\";\n\nfunction ContactCard({ contact }) {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const delContact = id => {\n    context\n      .handleDeleteContact(id)\n      .then(res => {\n        context\n          .handleUpdateContacts()\n          .then()\n          .catch();\n        toast({\n          title: \"Contact Deleted\",\n          status: \"error\"\n        });\n      })\n      .catch(err => {\n        toast({\n          title: \"Error\",\n          description: \"Can't delete contact\",\n          status: \"error\"\n        });\n      });\n  };\n\n  return (\n    <Stack bg=\"gray.800\" w=\"400px\" p={4} mb={3}>\n      <Flex justify=\"flex-end\">\n        <Button\n          variantColor=\"red\"\n          borderRadius=\"80px\"\n          onClick={() => delContact(contact._id)}\n        >\n          <FontAwesomeIcon icon={faMinus} size=\"1x\" />\n        </Button>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Name: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {contact.name}\n        </Text>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Email: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {contact.email}\n        </Text>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Phone: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {contact.phone}\n        </Text>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default ContactCard;\n","import React, { useContext } from \"react\";\nimport { Stack, Heading, Button, Flex } from \"@chakra-ui/core\";\nimport ContactCard from \"../../components/ContactCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { MyContext } from \"../../context\";\n\nfunction Contacts({ history }) {\n  const context = useContext(MyContext);\n  const { contacts } = context.state;\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const {\n          isLogged\n        } = context.state;\n        if (isLogged)\n          return (\n            <Flex\n              backgroundColor=\"#110D40\"\n              w=\"100vw\"\n              h=\"90vh\"\n              justify=\"center\"\n              color=\"white\"\n            >\n              <Stack>\n                <Heading as=\"h5\" p={4}>\n                  Safe Contacts\n                </Heading>\n                <Stack h='55vh' w='90vw' overflow='scroll'>\n                {contacts.map((e,i) => {\n                  return (\n                    <ContactCard\n                      key={i}\n                      contact={e}\n                    /> \n                  ) \n                })}\n                </Stack>\n                <br />\n                <Flex justify=\"flex-end\">\n                  <Link to=\"/contact/new\">\n                    <Button\n                      variantColor=\"red\"\n                      borderRadius=\"100px\"\n                      h=\"70px\"\n                      w=\"70px\"\n                    >\n                      <FontAwesomeIcon icon={faPlus} size=\"2x\" />\n                    </Button>\n                  </Link>\n                </Flex>\n              </Stack>\n            </Flex>\n          );\n        else {\n          history.push(\"/login\");\n        }\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Contacts;\n","import React, { useContext } from \"react\";\nimport {\n  FormControl,\n  Input,\n  useToast,\n  Flex,\n  InputGroup,\n  InputLeftElement\n} from \"@chakra-ui/core\";\nimport { MyContext } from \"../../context\";\nimport Form from \"../../components/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faEnvelope, faPhone } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Contact({history}) {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const create = e => {\n    context\n      .handleContactSubmit(e)\n      .then(res => {\n        context.handleUpdateContacts().then().catch()\n        toast({\n          title: \"Created\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true\n        });\n        history.push(\"/profile/contacts\");\n      })\n      .catch(err => {\n        toast({\n          title: \"Please, try again!\",\n          description: \"Can't create contact\",\n          status: \"error\"\n        });\n      });\n  }\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        return (\n          <Flex\n            backgroundColor=\"#110D40\"\n            w=\"100vw\"\n            h=\"90vh\"\n            align=\"center\"\n            justify=\"center\"\n          >\n            <Form\n              submit={create}\n              bgColor=\"transparent\"\n              title=\"Add safe contact\"\n            >\n              <FormControl isRequired>\n                <InputGroup>\n                  <InputLeftElement\n                    children={\n                      <FontAwesomeIcon icon={faUser} size=\"1x\" color=\"gray\" />\n                    }\n                  />\n                  <Input\n                    name=\"name\"\n                    value={context.state.formContact.name}\n                    onChange={context.handleContactInput}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <FormControl isRequired>\n                <InputGroup>\n                  <InputLeftElement\n                    children={\n                      <FontAwesomeIcon\n                        icon={faEnvelope}\n                        size=\"1x\"\n                        color=\"gray\"\n                      />\n                    }\n                  />\n                  <Input\n                    name=\"email\"\n                    value={context.state.formContact.email}\n                    onChange={context.handleContactInput}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                  />\n                </InputGroup>\n              </FormControl>\n              <FormControl isRequired>\n                <InputGroup>\n                  <InputLeftElement\n                    children={\n                      <FontAwesomeIcon icon={faPhone} size=\"1x\" color=\"gray\" />\n                    }\n                  />\n                  <Input\n                    name=\"phone\"\n                    value={context.state.formContact.phone}\n                    onChange={context.handleContactInput}\n                    type=\"text\"\n                    placeholder=\"Phone Number\"\n                  />\n                </InputGroup>\n              </FormControl>\n            </Form>\n          </Flex>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Contact;\n","import React, { useContext } from \"react\";\nimport Geocoder from \"react-mapbox-gl-geocoder\";\nimport ReactMapGL from \"react-map-gl\";\nimport { MyContext } from \"../../context\";\nimport Form from \"../../components/Form\";\nimport {\n  Flex,\n  Stack,\n  FormControl,\n  InputGroup,\n  InputLeftElement,\n  Input,\n  Textarea,\n  useToast\n} from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarked } from \"@fortawesome/free-solid-svg-icons\";\n\nconst mapAccess = {\n  mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_KEY\n};\n\nconst mapStyle = {\n  width: \"200px\",\n  height: \"20vh\",\n  position: \"absolute\"\n};\n\nconst queryParams = {\n  country: \"mx\"\n};\n\nconst SafePlace = ({history}) => {\n  const context = useContext(MyContext);\n  const toast = useToast()\n\n  const addPlace = e => {\n    context\n      .handleSafePlaceSubmit(e)\n      .then(res => {\n        context.handleUpdatePlaces().then().catch()\n        toast({\n          title: 'Place Created',\n          status: 'success',\n          isClosable: true\n        })\n        history.push('/')\n      })\n      .catch(err => {\n        toast({\n          title: 'Something went wrong',\n          description: 'Please try again later!!',\n          status: 'error'\n        })\n      })\n  };\n\n  const onSelect = (e, item) => {\n    context.handleOnSelectMap(e, item);\n  };\n\n  const changeViewPort = newViewPort => {\n    context.updateViewPort(newViewPort);\n  };\n\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const { viewport, isLogged } = context.state;\n        if(isLogged) \n        return (\n          <Flex backgroundColor=\"gray.600\" w=\"100vw\" h=\"90vh\" justify=\"center\">\n            <Stack>\n              <Form\n                submit={addPlace}\n                bgColor=\"transparent\"\n                title=\"Add Safe Place\"\n              >\n                <Geocoder\n                  {...mapAccess}\n                  onSelected={onSelect}\n                  viewport={viewport}\n                  hideOnSelect={true}\n                  queryParams={queryParams}\n                  limit={10}\n                  className=\"react-geocoder\"\n                  initialInputValue={\"Search\"}\n                  color=\"white\"\n                />\n                <ReactMapGL\n                  {...mapAccess}\n                  {...viewport}\n                  {...mapStyle}\n                  onViewportChange={changeViewPort}\n                />\n                <br />\n                <FormControl isRequired>\n                  <InputGroup>\n                    <InputLeftElement\n                      children={\n                        <FontAwesomeIcon\n                          icon={faMapMarked}\n                          size=\"1x\"\n                          color=\"gray\"\n                        />\n                      }\n                    />\n                    <Input\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      value={context.state.formSafePlace.name}\n                      onChange={context.handleSafePlaceInput}\n                    />\n                  </InputGroup>\n                </FormControl>\n                <FormControl isRequired>\n                  <InputGroup>\n                    <Textarea\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      value={context.state.formSafePlace.description}\n                      onChange={context.handleSafePlaceInput}\n                    />\n                  </InputGroup>\n                </FormControl>\n              </Form>\n            </Stack>\n          </Flex>\n        );\n        else {\n          history.push('/login')\n        }\n      }}\n    </MyContext.Consumer>\n  );\n};\n\nexport default SafePlace;\n","import axios from \"axios\";\nconst baseURL =\n  \"https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=ubicacion-acceso-gratuito-internet-wifi-c5&rows=200&facet=colonia&facet=alcaldia&facet=boton&facet=altavoz&facet=tipo_de_poste&refine.boton=CON+BOTON&format=geojson\";\n\nconst service = axios.create({ baseURL });\n\nconst MAP_CCINCO = {\n  map: async () => {\n    return await service.get();\n  }\n};\n\nexport default MAP_CCINCO;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport MAP_CCINCO from \"../../services/mapc5\";\nimport \"./C5.css\";\n\nconst style = {\n  width: \"100vw\",\n  height: \"80vh\",\n  position: \"absolute\"\n};\n\nconst Ccinco = () => {\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n    const initializeMap = ({ setMap, mapContainer }) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const center = [pos.coords.longitude, pos.coords.latitude];\n          new mapboxgl.Marker().setLngLat(center).addTo(map);\n        });\n        const map = new mapboxgl.Map({\n          container: mapContainer.current,\n          style: \"mapbox://styles/mapbox/dark-v10\",\n          center: [-99.1353989, 19.4326018],\n          zoom: 10\n        });\n        MAP_CCINCO.map().then(res => {\n          res.data.features.forEach(function(marker) {\n            const el = document.createElement(\"div\");\n            el.className = \"marker\";\n            new mapboxgl.Marker(el)\n              .setLngLat(marker.geometry.coordinates)\n              .setPopup(\n                new mapboxgl.Popup({ offset: 25 }).setHTML(\n                  \"<h3>\" +\n                    \"C5 Camera\" +\n                    \"</h3><p>\" +\n                    marker.properties.estatus_conectividad +\n                    \"</p>\"\n                )\n              )\n              .addTo(map);\n          });\n        });\n      }\n    };\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [map]);\n\n  return <div ref={el => (mapContainer.current = el)} style={style} />;\n};\n\nexport default Ccinco;\n","import React, { useContext } from \"react\";\nimport { MyContext } from \"../context\";\nimport { useToast, Stack, Flex, Button, Text } from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction PlaceCard({ place }) {\n  const context = useContext(MyContext);\n  const toast = useToast();\n\n  const delPlace = id => {\n    context\n      .handleDeletePlace(id)\n      .then(res => {\n        context\n          .handleUpdatePlaces()\n          .then()\n          .catch();\n        toast({\n          title: \"Contact Deleted\",\n          status: \"error\"\n        });\n      })\n      .catch(err => {\n        toast({\n          title: \"Error\",\n          description: \"Can't delete Place\",\n          status: \"error\"\n        });\n      });\n  };\n\n  return (\n    <Stack bg=\"gray.800\" w=\"400px\" p={4} mb={3}>\n      <Flex justify=\"flex-end\">\n        <Button\n          variantColor=\"red\"\n          borderRadius=\"80px\"\n          onClick={() => delPlace(place._id)}\n        >\n          <FontAwesomeIcon icon={faMinus} size=\"1x\" />\n        </Button>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Name: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {place.name}\n        </Text>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Description: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {place.description}\n        </Text>\n      </Flex>\n      <Flex p={1}>\n        <Text fontSize=\"lg\">Address: </Text>\n        <Text fontSize=\"2xl\" ml={8}>\n          {place.properties.address}\n        </Text>\n      </Flex>\n    </Stack>\n  );\n}\n\nexport default PlaceCard;\n","import React, { useContext } from \"react\";\nimport { MyContext } from \"../../context\";\nimport { Flex, Heading, Stack, Button } from \"@chakra-ui/core\";\nimport PlaceCard from \"../../components/PlaceCard\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction SafePlaces({ history }) {\n  const context = useContext(MyContext);\n  const { places } = context.state;\n  return (\n    <MyContext.Consumer>\n      {context => {\n        const { isLogged } = context.state;\n        if (isLogged)\n          return (\n            <Flex\n              backgroundColor=\"#110D40\"\n              w=\"100vw\"\n              h=\"90vh\"\n              justify=\"center\"\n              color=\"white\"\n            >\n              <Stack>\n                <Heading as=\"h5\" p={4}>\n                  Safe Places\n                </Heading>\n                <Stack h=\"55vh\" w=\"90vw\" overflow=\"scroll\">\n                  {places.map((e, i) => {\n                    return <PlaceCard key={i} place={e} />;\n                  })}\n                </Stack>\n                <br />\n                <Flex justify=\"flex-end\">\n                  <Link to=\"/addPlaces\">\n                    <Button\n                      variantColor=\"red\"\n                      borderRadius=\"100px\"\n                      h=\"70px\"\n                      w=\"70px\"\n                    >\n                      <FontAwesomeIcon icon={faPlus} size=\"2x\" />{\" \"}\n                    </Button>\n                  </Link>\n                </Flex>\n              </Stack>\n            </Flex>\n          );\n        else {\n          history.push(\"/login\");\n        }\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default SafePlaces;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar'\nimport Home from './pages/home/Home';\nimport NotFound from './components/404/NotFound.js';\nimport Footer from './components/Footer';\nimport Login from './pages/login/Login';\nimport Signup from './pages/signup/Signup';\nimport Profile from './pages/profile/Profile';\nimport Contacts from './pages/contacts/Contacts';\nimport Contact from './pages/contact/Contact';\nimport SafePlace from \"./pages/safePlace/safePlace\";\nimport Ccinco from './pages/C5/c5'\nimport SafePlaces from './pages/safePlaces/safePlaces';\n\n// const loginDummy = () => <h1>Login Dummy</h1>\n// const signupDummy = () => <h1>SignUp Dummy</h1>\n// const profileDummy = () => <h1>Profile Dummy</h1>\n// const contactDummy = () => <h1>Contacs Dummy</h1>\n// const contactDummy = () => <h1>Contacs Dummy</h1>\n\n\nconst Router = () => (\n  <>\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/profile\" component={Profile} />\n      <Route exact path=\"/c5view\" component={Ccinco} />\n      <Route exact path=\"/profile/contacts\" component={Contacts} />\n      <Route exact path=\"/profile/places\" component={SafePlaces} />\n      <Route exact path=\"/contact/new\" component={Contact} />\n      <Route exact path=\"/addPlaces\" component={SafePlace} />\n      <Route component={NotFound} />\n    </Switch>\n    <Footer />\n  </>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { theme } from \"@chakra-ui/core\";\n\nconst customIcons = {\n  user: {\n    path: (\n      <path d=\"M12.075,10.812c1.358-0.853,2.242-2.507,2.242-4.037c0-2.181-1.795-4.618-4.198-4.618S5.921,4.594,5.921,6.775c0,1.53,0.884,3.185,2.242,4.037c-3.222,0.865-5.6,3.807-5.6,7.298c0,0.23,0.189,0.42,0.42,0.42h14.273c0.23,0,0.42-0.189,0.42-0.42C17.676,14.619,15.297,11.677,12.075,10.812 M6.761,6.775c0-2.162,1.773-3.778,3.358-3.778s3.359,1.616,3.359,3.778c0,2.162-1.774,3.778-3.359,3.778S6.761,8.937,6.761,6.775 M3.415,17.69c0.218-3.51,3.142-6.297,6.704-6.297c3.562,0,6.486,2.787,6.705,6.297H3.415z\" />\n    ),\n    // If the icon's viewBox is `0 0 24 24`, you can ignore `viewBox`\n    viewBox: \"0 0 20 20\"\n  }\n};\n\nconst customTheme = {\n  ...theme,\n  icons: {\n    ...theme.icons,\n    ...customIcons\n  }\n};\n\nexport default customTheme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\nimport MyProvider from \"./context\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport theme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nrequire(\"dotenv\").config();\n\n\nfunction WhitTheme() {\n    return (\n        <ThemeProvider theme={theme}>\n        <CSSReset />\n        <Router />\n        </ThemeProvider>\n    )\n}\n\nfunction WhitContext() {\n    return (\n        <BrowserRouter>\n            <MyProvider>\n                <WhitTheme />\n            </MyProvider>\n        </BrowserRouter>\n    )\n}\n\nReactDOM.render(<WhitContext />, document.getElementById('root'));\n\nserviceWorker.register()\n"],"sourceRoot":""}